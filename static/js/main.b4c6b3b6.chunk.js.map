{"version":3,"sources":["MenuItem.js","Menu.js","FeatureCard.js","Content.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["MenuItem","props","className","isSelected","onClick","text","Menu","onMenuItemClicked","selectedMenuItem","FeatureCard","title","description","demo","style","marginLeft","href","target","rel","Content","getContentTitle","getContent","Header","prps","App","useState","setSelectedMenuItem","useEffect","urlParams","URLSearchParams","window","location","search","get","index","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4c6b3b6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MenuItem.css\";\n\nfunction MenuItem(props) {\n    return (\n        <div\n            className={`MenuItem--container ${props.isSelected &&\n                \"MenuItem--selected\"}`}\n            onClick={props.onClick}\n        >\n            <span className=\"MenuItem--text\">{props.text}</span>\n        </div>\n    );\n}\n\nexport default MenuItem;\n","import React from \"react\";\nimport \"./Menu.css\";\nimport MenuItem from \"./MenuItem\";\n\nfunction Menu(props) {\n    const { onMenuItemClicked, selectedMenuItem } = props;\n\n    return (\n        <div className=\"Menu--container\">\n            <MenuItem\n                text=\"BASIC FEATURES\"\n                isSelected={selectedMenuItem === 0}\n                onClick={onMenuItemClicked(0)}\n            />\n            <MenuItem\n                text=\"PREMIUM BENEFITS\"\n                isSelected={selectedMenuItem === 1}\n                onClick={onMenuItemClicked(1)}\n            />\n            <MenuItem\n                text=\"FAQ\"\n                isSelected={selectedMenuItem === 2}\n                onClick={onMenuItemClicked(2)}\n            />\n            <MenuItem\n                text=\"CONTACT\"\n                isSelected={selectedMenuItem === 3}\n                onClick={onMenuItemClicked(3)}\n            />\n        </div>\n    );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport \"./FeatureCard.css\";\n\nfunction FeatureCard(props) {\n    const { title = \"None\", description, demo } = props;\n\n    return (\n        <div className=\"FeatureCard--container\">\n            <div className=\"FeatureCard--header\">\n                {title}\n                {demo && (\n                    <a\n                        style={{ marginLeft: \"12px\" }}\n                        href={demo}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        FEATURE DEMO\n                    </a>\n                )}\n            </div>\n            <div className=\"FeatureCard--description\">{description}</div>\n        </div>\n    );\n}\n\nexport default FeatureCard;\n","import React from \"react\";\nimport \"./Content.css\";\nimport FeatureCard from \"./FeatureCard\";\n\nfunction Content(props) {\n    const getContentTitle = selectedMenuItem => {\n        switch (selectedMenuItem) {\n            case 0:\n                return \"BASIC FEATURES\";\n            case 1:\n                return \"PREMIUM BENEFITS\";\n            case 2:\n                return \"FAQ\";\n            default:\n                return \"CONTACT\";\n        }\n    };\n\n    const getContent = selectedMenuItem => {\n        switch (selectedMenuItem) {\n            case 0:\n                return [\n                    <FeatureCard title=\"KEYBOARD SHORTCUTS\" description={<><p>The main feature of shortfuts is its keyboard shortcuts. There's a huge list of keyboard shortcuts, ranging from searching the transfer market, buying and selling players, and quick selling cards, that allow you to perform common web app functions with just the press of a button.</p> <p>Shortcuts are fully customizable and allow you to do what's best for you.</p></>} />,\n                    <FeatureCard title=\"SAFETY SETTINGS\" description={<><p>In order to look out for my users, I've added a couple of safety settings designed to help ensure users don't get banned. These settings include a warning when you're searching too frequently and a small delay for the \"buy now\" command to help disguise you as a keyboard user.</p> <p>These settings are enabled by default, but can be turned off with a premium subscription.</p></>} />\n                ];\n            case 1:\n                return [\n                    <FeatureCard title=\"FUTBIN INTEGRATION\" demo=\"https://streamable.com/qjei3\" description={<><p>With the press of a button, get the latest BIN data from FUTBIN brought directly into the web app so you can ensure you're buying or selling at the right price.</p> <p>When fetching FUTBIN data for a card you already own, we'll automatically fill in the start/buy now price to be competitive so you can sell quickly!</p></>} />,\n                    <FeatureCard title=\"DISABLE SAFETY SETTINGS\" description={<><p>While the safety settings are there for you... safety... many users find they get in the way of sniping. If you're willing to take the risk of a soft market ban, disable them for more efficient sniping!</p> <p>You'll be able to search to your heart's content and get near 0 delay between seeing and buying!</p></>} />,\n                    <FeatureCard title=\"SNIPING GUARD\" demo=\"https://streamable.com/ys1qp\" description={<><p>Many users accidentally back out of the search results page instinctively ready for the next search even though their sniping filter may have caught something! Enable this setting to ignore the \"back\" shortcut temporarily when there's a hit, and you won't miss another card!</p></>} />,\n                    <FeatureCard title=\"DEVELOPER SUPPORT\" description={<><p>By subscribing to shortfuts premium, you'll be supporting software you love and the developer behind it. Subscribing will ensure that this project gets love and attention, and will continue to be maintained and improved.</p> <p>I sincerely thank anyone who chooses to subscribe. Your support means a lot to my family and me!</p></>} />\n                ];\n            case 2:\n                return [<FeatureCard title=\"CAN I GET BANNED USING SHORTFUTS?\" description={<><p>There's been upwards of 50,000 users who have used shortfuts, and I've never heard of anyone losing their account because of it. There may be soft, temporary market bans, but there's little risk of losing your account.</p><p>Please note that I make absolutely no guarantee of this and you should use at your own risk.</p></>} />, <FeatureCard title=\"HOW COME MY SHORTCUTS AREN'T WORKING?\" description={<><p>Sometimes there are hiccups. Try clearing your cache and fully restarting Google Chrome. If that doesn't work, you may need to uninstall and reinstall the extension.</p><p>Still no luck? Feel free to send me an email (shortfuts@gmail.com) or DM me on <a href=\"https://www.twitter.com/shortfuts\" target=\"_blank\"\n                rel=\"noopener noreferrer\">Twitter</a>.</p></>} />, <FeatureCard title={`WHAT DO I DO IF THE \"BUY PREMIUM\" BUTTON DOESN'T WORK?`} description={<><p>If the \"buy premium\" button doesn't work, you can still buy premium via PayPal. Just use <a href=\"https://www.paypal.me./martellaj/15\" target=\"_blank\"\n                rel=\"noopener noreferrer\">this link</a> to send me $15 USD and the email address you use to sign into Google Chrome and you will get premium for all of FIFA 20 within 24 hours.</p><p>If you have any questions or concerns, please send me an email (shortfuts@gmail.com) or DM me on <a href=\"https://www.twitter.com/shortfuts\" target=\"_blank\"\n                rel=\"noopener noreferrer\">Twitter</a>. </p></>} />, <FeatureCard title={`WHAT DO I DO IF I DON'T HAVE A CREDIT CARD THAT WORKS WITH GOOGLE PAY?`} description={<><p>You can still buy premium via PayPal! Just use <a href=\"https://www.paypal.me./martellaj/15\" target=\"_blank\"\n                rel=\"noopener noreferrer\">this link</a> to send me $15 USD and the email address you use to sign into Google Chrome and you will get premium for all of FIFA 20 within 24 hours.</p><p>If you have any questions or concerns, please send me an email (shortfuts@gmail.com) or DM me on <a href=\"https://www.twitter.com/shortfuts\" target=\"_blank\"\n                rel=\"noopener noreferrer\">Twitter</a>. </p></>} />, <FeatureCard title={`HOW CAN I UNSUBSCRIBE?`} description={<><p>First of all, you really shouldn't. It's great, I'm great, and you should support it/me.</p><p>If you really want to unsubscribe, simply go to your <a href=\"https://pay.google.com/payments/u/home#subscriptionsAndServices\" target=\"_blank\"\n                rel=\"noopener noreferrer\">Google Pay subscriptions page</a> to manage your subscription.</p></>} />];\n            default:\n                return [<FeatureCard title=\"TWITTER\" description={<p>Send me your best snipes, ask me questions, or just say hey on Twitter. My handle is <a href=\"https://www.twitter.com/shortfuts\" target=\"_blank\"\n                rel=\"noopener noreferrer\">@shortfuts</a>!</p>} />, <FeatureCard title=\"EMAIL\" description={<p>Feel free to send me any questions to my email (shortfuts@gmail.com).</p>} />];\n        }\n    };\n\n    return (\n        <div className=\"Content--container\">\n            <h2 className=\"Content--title\">\n                {getContentTitle(props.selectedMenuItem)}\n            </h2>\n            {getContent(props.selectedMenuItem)}\n        </div>\n    );\n}\n\nexport default Content;\n","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header(prps) {\n    return (\n        <div className=\"Header--container\">\n            <h1>shortfuts</h1>\n            <h4>\n                shortfuts is a free Chrome extension to help make EA's FIFA\n                Ultimate Team web app easier to use by adding keybinds and a few\n                extra enhancements. Download the extension from the Chrome Web\n                Store{\" \"}\n                <a\n                    href=\"https://bit.ly/shortfuts-app\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    here\n                </a>{\" \"}\n                and browse the features of the application below!\n            </h4>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Menu from \"./Menu\";\nimport Content from \"./Content\";\nimport Header from \"./Header\";\n\nfunction App() {\n    const [selectedMenuItem, setSelectedMenuItem] = useState(0);\n\n    useEffect(() => {\n        const urlParams = new URLSearchParams(window.location.search);\n\n        const premiumParam = urlParams.get(\"premium\");\n        if (premiumParam) {\n            setSelectedMenuItem(1);\n        }\n\n        const faqParam = urlParams.get(\"faq\");\n        if (faqParam) {\n            setSelectedMenuItem(2);\n        }\n    }, []);\n\n    const onMenuItemClicked = index => {\n        return () => setSelectedMenuItem(index);\n    };\n\n    return (\n        <div className=\"container\">\n            <Header />\n            <div className=\"body\">\n                <Menu\n                    onMenuItemClicked={onMenuItemClicked}\n                    selectedMenuItem={selectedMenuItem}\n                />\n                <Content selectedMenuItem={selectedMenuItem} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}